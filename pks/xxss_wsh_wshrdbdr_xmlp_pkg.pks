DROP PACKAGE APPS.XXSS_WSH_WSHRDBDR_XMLP_PKG;

CREATE OR REPLACE PACKAGE APPS.XXSS_WSH_WSHRDBDR_XMLP_PKG AUTHID CURRENT_USER AS
/* $Header: WSHRDBDRS.pls 120.3 2008/02/12 13:12:54 dwkrishn noship $ */
  P_CONC_REQUEST_ID NUMBER := 0;

  P_HEADER_ID_LOW NUMBER;

  P_HEADER_ID_HIGH NUMBER;

  P_ITEM_FLEX_CODE VARCHAR2(32767);

  P_ORGANIZATION_ID NUMBER;

  P_ITEM_ID NUMBER;

  P_ITEM_CATE_SET_ID NUMBER;

  P_CREATED_BY_ID NUMBER;

  LP_ITEM_FLEX_ALL_SEG VARCHAR2(1000);

  LP_ITEM_FLEX_ALL_SEG_HIGH VARCHAR2(600);

  P_ITEM_CATEGORY_ID NUMBER;

  P_ITEM_DISPLAY VARCHAR2(32767);

  LP_HEADER_NUMBER VARCHAR2(500);

  LP_CREATED_BY VARCHAR2(200);

  LP_ITEM_FROM VARCHAR2(100);

  LP_ITEM_WHERE VARCHAR2(500);

  RP_WAREHOUSE_ID NUMBER;

  RP_USER_ID NUMBER;

  LP_STRUCTURE_NUM NUMBER := 101;

  LP_WAREHOUSE_GROUP VARCHAR2(240);

  LP_WAREHOUSE_ID_SELECT VARCHAR2(240);

  LP_WAREHOUSE_NAME_SELECT VARCHAR2(240);

  LP_ORDER_CATEGORY VARCHAR2(500);

  P_TRANSACTION_TYPE_ID NUMBER;

  LP_ORDER_TYPE VARCHAR2(200);

  P_ITEM_STRUCTURE_NUM NUMBER;

  LP_INVENTORY VARCHAR2(100);

  RP_ORDER_TYPE_NAME VARCHAR2(240);

  LP_ITEM_ID VARCHAR2(100);

  P_ORDER_NUM_LOW NUMBER;

  P_ORDER_NUM_HIGH NUMBER;

  LP_COUNTRY_FROM VARCHAR2(200);

  LP_CUSTOMER VARCHAR2(200);

  LP_WAREHOUSE VARCHAR2(200);

  LP_COUNTRY_WHERE VARCHAR2(200);

  P_SORT_BY VARCHAR2(200);

  P_CUSTOMER_ID NUMBER;

  P_SHIP_TO_COUNTRY_CODE VARCHAR2(240);

  LP_SORT_BY VARCHAR2(100);

  RP_USER VARCHAR2(200);

  RP_TERRITORY_CODE VARCHAR2(200);

  LP_SOURCE_CODE VARCHAR2(100);

  RP_CUSTOMER VARCHAR2(240);

  RP_SORT_BY VARCHAR2(200);

  P_SOURCE_SYSTEM VARCHAR2(32767);

  DLATE NUMBER;

  RP_REPORT_NAME VARCHAR2(240);

  RP_SUB_TITLE VARCHAR2(80);

  RP_DATA_FOUND VARCHAR2(300);

  RP_ITEM_FLEX_ALL_SEG VARCHAR2(1000) := 'SI.SEGMENT1||SI.SEGMENT2||SI.SEGMENT3||SI.SEGMENT4||SI.SEGMENT5||SI.SEGMENT6||SI.SEGMENT7||SI.SEGMENT8||
  SI.SEGMENT9||SI.SEGMENT10||SI.SEGMENT11||SI.SEGMENT12||SI.SEGMENT13||SI.SEGMENT14||SI.SEGMENT15||SI.SEGMENT16||SI.SEGMENT17||SI.SEGMENT18||
  SI.SEGMENT19||SI.SEGMENT20';

  RP_ITEM_FLEX_ALL_SEG_WHERE VARCHAR2(600);

  RP_ORDER_BY VARCHAR2(80);

  RP_FLEX_OR_DESC VARCHAR2(80);

  RP_ORDER_RANGE VARCHAR2(60);

  RP_CATEGORY_SET VARCHAR2(40);

  RP_CATEGORY VARCHAR2(80);

  RP_ORDER_NUM_HIGH NUMBER;

  RP_ORDER_NUM_LOW NUMBER;

  RP_WAREHOUSE VARCHAR2(240);

  RP_ITEM VARCHAR2(2000);

  RP_SOURCE_SYSTEM VARCHAR2(80);

  FUNCTION BEFOREREPORT RETURN BOOLEAN;

  FUNCTION AFTERREPORT RETURN BOOLEAN;

  FUNCTION P_ORGANIZATION_IDVALIDTRIGGER RETURN BOOLEAN;

  FUNCTION P_ITEM_FLEX_CODEVALIDTRIGGER RETURN BOOLEAN;

  FUNCTION AFTERPFORM RETURN BOOLEAN;

  FUNCTION C_SET_LBLFORMULA RETURN VARCHAR2;

  FUNCTION CF_ITEM_DISPLAYFORMULA(INVENTORY_ITEM_ID IN NUMBER
                                 ,ORGANIZATION_ID IN NUMBER
                                 ,ITEM_DESCRIPTION IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION CF_LINE_ITEM_DISPLAYFORMULA(LINE_ITEM IN NUMBER
                                      ,ORGANIZATION_ID IN NUMBER
                                      ,ITEM_DESCRIPTION IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION CF_LINE_SHIPPED_QTYFORMULA(SOURCE_LINE_SET_ID IN NUMBER
                                     ,SOURCE_HEADER_ID IN NUMBER
                                     ,REQUESTED_QUANTITY_UOM IN VARCHAR2
                                     ,ORDER_UOM IN VARCHAR2
                                     ,LINE_ITEM IN NUMBER) RETURN NUMBER;

  FUNCTION CF_LINE_BO_QTYFORMULA(SOURCE_LINE_SET_ID IN NUMBER
                                ,SOURCE_HEADER_ID IN NUMBER
                                ,REQUESTED_QUANTITY_UOM IN VARCHAR2
                                ,ORDER_UOM IN VARCHAR2
                                ,LINE_ITEM IN NUMBER) RETURN NUMBER;

  FUNCTION CF_LINE_ORDERED_AMTFORMULA(CF_LINE_ORDERED_QTY IN NUMBER
                                     ,CF_selling_price IN NUMBER) RETURN NUMBER;

  FUNCTION CF_LINE_BO_AMTFORMULA(CF_LINE_BO_QTY IN NUMBER
                                ,CF_selling_price IN NUMBER) RETURN NUMBER;

  FUNCTION CF_LINE_ORDERED_QTYFORMULA(SOURCE_LINE_SET_ID IN NUMBER) RETURN NUMBER;

  FUNCTION CF_PROMISE_DATEFORMULA(SOURCE_LINE_ID IN NUMBER) RETURN DATE;

  FUNCTION CF_DAYS_LATEFORMULA(CF_PROMISE_DATE IN DATE) RETURN NUMBER;

  FUNCTION CF_SOURCE_CODEFORMULA(SOURCE_CODE IN VARCHAR2) RETURN CHAR;

  FUNCTION CF_DISTINCT_UOMFORMULA(ORDER_NUMBER IN VARCHAR2) RETURN NUMBER;

  FUNCTION CF_SORT_ENABLEDFORMULA(CS_COUNT_DUOM IN NUMBER
                                 ,CS_SUM_DUOM IN NUMBER) RETURN NUMBER;

  FUNCTION CF_CURR_ENABLEDFORMULA(CS_COUNT_SORT_ENABLED IN NUMBER
                                 ,CS_SUM_SORT_ENABLED IN NUMBER) RETURN NUMBER;

				 FUNCTION CF_SELLING_PRICEFORMULA(SOURCE_LINE_ID IN NUMBER) RETURN NUMBER;

  FUNCTION CF_EMAIL_ID RETURN VARCHAR2 ;

  FUNCTION CF_EMAIL_SERVER RETURN VARCHAR2 ;

  FUNCTION CF_MESSAGE RETURN VARCHAR2 ;

  FUNCTION RP_REPORT_NAME_P RETURN VARCHAR2;

  FUNCTION RP_SUB_TITLE_P RETURN VARCHAR2;

  FUNCTION RP_DATA_FOUND_P RETURN VARCHAR2;

  FUNCTION RP_ITEM_FLEX_ALL_SEG_P RETURN VARCHAR2;

  FUNCTION RP_ITEM_FLEX_ALL_SEG_WHERE_P RETURN VARCHAR2;

  FUNCTION RP_ORDER_BY_P RETURN VARCHAR2;

  FUNCTION RP_FLEX_OR_DESC_P RETURN VARCHAR2;

  FUNCTION RP_ORDER_RANGE_P RETURN VARCHAR2;

  FUNCTION RP_CATEGORY_SET_P RETURN VARCHAR2;

  FUNCTION RP_CATEGORY_P RETURN VARCHAR2;

  FUNCTION RP_ORDER_NUM_HIGH_P RETURN NUMBER;

  FUNCTION RP_ORDER_NUM_LOW_P RETURN NUMBER;

  FUNCTION RP_WAREHOUSE_P RETURN VARCHAR2;

  FUNCTION RP_ITEM_P RETURN VARCHAR2;

  FUNCTION RP_SOURCE_SYSTEM_P RETURN VARCHAR2;

  PROCEDURE SET_NAME(APPLICATION IN VARCHAR2
                    ,NAME IN VARCHAR2);

  PROCEDURE SET_TOKEN(TOKEN IN VARCHAR2
                     ,VALUE IN VARCHAR2
                     ,TRANSLATE IN BOOLEAN);

  PROCEDURE RETRIEVE(MSGOUT OUT NOCOPY VARCHAR2);

  PROCEDURE CLEAR;

  FUNCTION GET_STRING(APPIN IN VARCHAR2
                     ,NAMEIN IN VARCHAR2) RETURN VARCHAR2;

  FUNCTION GET_NUMBER(APPIN IN VARCHAR2
                     ,NAMEIN IN VARCHAR2) RETURN NUMBER;

  FUNCTION GET RETURN VARCHAR2;

  FUNCTION GET_ENCODED RETURN VARCHAR2;

  PROCEDURE PARSE_ENCODED(ENCODED_MESSAGE IN VARCHAR2
                         ,APP_SHORT_NAME OUT NOCOPY VARCHAR2
                         ,MESSAGE_NAME OUT NOCOPY VARCHAR2);

  PROCEDURE SET_ENCODED(ENCODED_MESSAGE IN VARCHAR2);

  PROCEDURE RAISE_ERROR;

END XXSS_WSH_WSHRDBDR_XMLP_PKG;
/
